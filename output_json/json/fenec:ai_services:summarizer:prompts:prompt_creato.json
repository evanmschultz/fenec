{
    "docstring": "",
    "header": [],
    "footer": [],
    "imports": [
        {
            "import_names": [
                {
                    "name": "logging",
                    "as_name": "",
                    "local_block_id": ""
                }
            ],
            "imported_from": "",
            "import_module_type": "STANDARD_LIBRARY",
            "local_module_id": ""
        },
        {
            "import_names": [
                {
                    "name": "re",
                    "as_name": "",
                    "local_block_id": ""
                }
            ],
            "imported_from": "",
            "import_module_type": "STANDARD_LIBRARY",
            "local_module_id": ""
        },
        {
            "import_names": [
                {
                    "name": "Callable",
                    "as_name": "",
                    "local_block_id": ""
                }
            ],
            "imported_from": "typing",
            "import_module_type": "STANDARD_LIBRARY",
            "local_module_id": ""
        },
        {
            "import_names": [
                {
                    "name": "print",
                    "as_name": "",
                    "local_block_id": ""
                }
            ],
            "imported_from": "rich",
            "import_module_type": "THIRD_PARTY",
            "local_module_id": ""
        },
        {
            "import_names": [
                {
                    "name": "fenec.ai_services.summarizer.prompts.summarization_prompts",
                    "as_name": "prompts",
                    "local_block_id": ""
                }
            ],
            "imported_from": "",
            "import_module_type": "LOCAL",
            "local_module_id": "fenec:ai_services:summarizer:prompts:summarization_prompts.py__*__MODULE"
        }
    ],
    "id": "fenec:ai_services:summarizer:prompts:prompt_creator.py__*__MODULE",
    "file_path": "fenec/ai_services/summarizer/prompts/prompt_creator.py",
    "parent_id": "fenec:ai_services:summarizer:prompts__*__DIRECTORY",
    "block_type": "MODULE",
    "start_line_num": 1,
    "end_line_num": 457,
    "code_content": "import logging\nimport re\nfrom typing import Callable\n\nfrom rich import print\n\nimport fenec.ai_services.summarizer.prompts.summarization_prompts as prompts\n\n\nclass SummarizationPromptCreator:\n    \"\"\"\n    Class for creating prompts for the summarizer, supporting multi-pass summarization.\n\n    Methods:\n        - `create_prompt`: Static method that creates a prompt for the summarizer.\n\n    Examples:\n        ```Python\n        # Create a prompt for single-pass summarization\n        prompt: str | None = SummarizationPromptCreator.create_prompt(\n            code,\n            children_summaries,\n            dependency_summaries,\n            import_details,\n        )\n\n        # Create a prompt for multi-pass summarization\n        prompt: str | None = SummarizationPromptCreator.create_prompt(\n            code,\n            children_summaries,\n            dependency_summaries,\n            import_details,\n            parent_summary,\n            pass_number=2,\n            previous_summary=\"Previous summary of the code.\"\n        )\n        ```\n    \"\"\"\n\n    _interpolation_strategies: dict[str, Callable[..., str]] = {\n        # Pass 1 strategies (unchanged)\n        \"children_dependencies_import_details_parent_pass1\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_1,\n            code=code,\n            children_summaries=children_summaries,\n            dependencies=dependencies,\n            import_details=import_details,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"children_dependencies_noimport_details_noparent_pass1\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_1,\n            code=code,\n            children_summaries=children_summaries,\n            dependencies=dependencies,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"children_nodependencies_import_details_noparent_pass1\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_1,\n            code=code,\n            children_summaries=children_summaries,\n            import_details=import_details,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"children_nodependencies_noimport_details_noparent_pass1\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_1,\n            code=code,\n            children_summaries=children_summaries,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_dependencies_import_details_noparent_pass1\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_1,\n            code=code,\n            dependencies=dependencies,\n            import_details=import_details,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_dependencies_noimport_details_noparent_pass1\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_1,\n            code=code,\n            dependencies=dependencies,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_nodependencies_import_details_noparent_pass1\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_1,\n            code=code,\n            import_details=import_details,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_nodependencies_noimport_details_noparent_pass1\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_1,\n            code=code,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        # Pass 2 strategies (updated to include previous_summary)\n        \"children_dependencies_import_details_parent_pass2\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_2,\n            code=code,\n            children_summaries=children_summaries,\n            dependencies=dependencies,\n            import_details=import_details,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"children_dependencies_noimport_details_parent_pass2\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_2,\n            code=code,\n            children_summaries=children_summaries,\n            dependencies=dependencies,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"children_nodependencies_import_details_parent_pass2\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_2,\n            code=code,\n            children_summaries=children_summaries,\n            import_details=import_details,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"children_nodependencies_noimport_details_parent_pass2\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_2,\n            code=code,\n            children_summaries=children_summaries,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_dependencies_import_details_parent_pass2\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_2,\n            code=code,\n            dependencies=dependencies,\n            import_details=import_details,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_dependencies_noimport_details_parent_pass2\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_2,\n            code=code,\n            dependencies=dependencies,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_nodependencies_import_details_parent_pass2\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_2,\n            code=code,\n            import_details=import_details,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_nodependencies_noimport_details_parent_pass2\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_2,\n            code=code,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_nodependencies_noimport_details_noparent_pass2\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_2,\n            code=code,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"children_dependencies_noimport_details_noparent_pass2\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_2,\n            code=code,\n            children_summaries=children_summaries,\n            dependencies=dependencies,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_dependencies_noimport_details_noparent_pass2\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_2,\n            code=code,\n            dependencies=dependencies,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"children_nodependencies_noimport_details_noparent_pass2\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_2,\n            code=code,\n            children_summaries=children_summaries,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        # Pass 3 strategies (updated to include previous_summary)\n        \"children_dependencies_import_details_parent_pass3\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_3,\n            code=code,\n            children_summaries=children_summaries,\n            dependencies=dependencies,\n            import_details=import_details,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"children_dependencies_noimport_details_parent_pass3\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_3,\n            code=code,\n            children_summaries=children_summaries,\n            dependencies=dependencies,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"children_nodependencies_import_details_parent_pass3\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_3,\n            code=code,\n            children_summaries=children_summaries,\n            import_details=import_details,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"children_nodependencies_noimport_details_parent_pass3\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_3,\n            code=code,\n            children_summaries=children_summaries,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"children_dependencies_noimport_details_noparent_pass3\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_3,\n            code=code,\n            children_summaries=children_summaries,\n            dependencies=dependencies,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_dependencies_import_details_parent_pass3\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_3,\n            code=code,\n            dependencies=dependencies,\n            import_details=import_details,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_dependencies_noimport_details_parent_pass3\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_3,\n            code=code,\n            dependencies=dependencies,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_dependencies_noimport_details_noparent_pass3\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_3,\n            code=code,\n            dependencies=dependencies,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_nodependencies_import_details_parent_pass3\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_3,\n            code=code,\n            import_details=import_details,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_nodependencies_noimport_details_parent_pass3\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_3,\n            code=code,\n            parent_summary=parent_summary,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"nochildren_nodependencies_noimport_details_noparent_pass3\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_3,\n            code=code,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n        \"children_nodependencies_noimport_details_noparent_pass3\": lambda code, children_summaries, dependencies, import_details, parent_summary, pass_number, previous_summary: SummarizationPromptCreator._interpolate_prompt_string(\n            prompts.CODE_SUMMARY_PROMPT_PASS_3,\n            code=code,\n            children_summaries=children_summaries,\n            previous_summary=previous_summary,\n            EXAMPLE_1=prompts.EXAMPLE_1,\n            EXAMPLE_2=prompts.EXAMPLE_2,\n        ),\n    }\n\n    @staticmethod\n    def _interpolate_prompt_string(prompt_template: str, **kwargs) -> str:\n        \"\"\"\n        Returns a prompt string with the provided values interpolated into the template\n        and all traces of unused placeholders removed.\n\n        Args:\n            - `prompt_template` (str): The template string to interpolate.\n            - `**kwargs`: Keyword arguments containing the values to interpolate.\n\n        Returns:\n            - `str`: The interpolated prompt string with all traces of unused placeholders removed.\n        \"\"\"\n\n        prompt_string: str = prompt_template\n\n        # First, replace all provided values\n        for key, value in kwargs.items():\n            if value is not None:\n                placeholder: str = f\"{{{key}}}\"\n                prompt_string = prompt_string.replace(placeholder, str(value))\n\n        # Remove lines containing unused placeholders and their associated labels\n        lines: list[str] = prompt_string.split(\"\\n\")\n        cleaned_lines: list[str] = []\n        skip_next = False\n        for i, line in enumerate(lines):\n            if skip_next:\n                skip_next = False\n                continue\n\n            # Check if the line or the next line contains an unused placeholder\n            current_line_has_placeholder = re.search(r\"\\{[^}]+\\}\", line)\n            next_line_has_placeholder = i + 1 < len(lines) and re.search(\n                r\"\\{[^}]+\\}\", lines[i + 1]\n            )\n\n            if current_line_has_placeholder or next_line_has_placeholder:\n                # If this line is a label and the next line is an unused placeholder, skip both\n                if not current_line_has_placeholder and next_line_has_placeholder:\n                    skip_next = True\n                continue\n\n            # Keep lines without unused placeholders\n            cleaned_lines.append(line)\n\n        cleaned_prompt: str = \"\\n\".join(cleaned_lines)\n        cleaned_prompt = re.sub(r\"\\n\\s*\\n\", \"\\n\\n\", cleaned_prompt).strip()\n        # print(\n        #     f\"\\n\\n[u][blue]Prompt:[/blue][/u]\\n\\n{cleaned_prompt}\\n\\n[u][magenta]End Prompt[/magenta][/u]\\n\\n\"\n        # )\n\n        return cleaned_prompt\n\n    @staticmethod\n    def create_prompt(\n        code: str,\n        children_summaries: str | None = None,\n        dependency_summaries: str | None = None,\n        import_details: str | None = None,\n        parent_summary: str | None = None,\n        pass_number: int = 1,\n        previous_summary: str | None = None,\n    ) -> str | None:\n        \"\"\"\n        Dynamically creates a prompt for the summarizer based on the provided arguments, supporting multi-pass summarization.\n\n        Args:\n            - `code` (str): The code snippet to summarize.\n            - `children_summaries` (str, optional): The summaries of the children of the code snippet.\n            - `dependency_summaries` (str, optional): The summaries of the dependencies of the code snippet.\n            - `import_details` (str, optional): The import details of the code snippet.\n            - `parent_summary` (str, optional): The summary of the parent code block (for multi-pass summarization).\n            - `pass_number` (int, optional): The current pass number in multi-pass summarization. Default is 1.\n            - `previous_summary` (str, optional): The summary from the previous pass in multi-pass summarization.\n\n        Returns:\n            - `str`: The prompt for the summarizer.\n\n        Raises:\n            - `ValueError`: If no strategy is found for the given combination of arguments.\n\n        Examples:\n            ```Python\n            # Create a prompt for single-pass summarization\n            prompt: str | None = SummarizationPromptCreator.create_prompt(\n                code,\n                children_summaries,\n                dependency_summaries,\n                import_details,\n            )\n\n            # Create a prompt for multi-pass summarization (e.g., second pass)\n            prompt: str | None = SummarizationPromptCreator.create_prompt(\n                code,\n                children_summaries,\n                dependency_summaries,\n                import_details,\n                parent_summary,\n                pass_number=2,\n                previous_summary=\"Previous summary of the code.\"\n            )\n            ```\n        \"\"\"\n\n        strategy_key: str = \"_\".join(\n            [\n                \"children\" if children_summaries else \"nochildren\",\n                \"dependencies\" if dependency_summaries else \"nodependencies\",\n                \"import_details\" if import_details else \"noimport_details\",\n                \"parent\" if parent_summary else \"noparent\",\n                f\"pass{pass_number}\",\n            ]\n        )\n        strategy: Callable[..., str] | None = (\n            SummarizationPromptCreator._interpolation_strategies.get(strategy_key)\n        )\n        if not strategy:\n            raise ValueError(f\"Could not find strategy for {strategy_key}\")\n        else:\n            # logging.info(f\"Using strategy: {strategy_key}\")\n            # print(\n            #     f\"With children_summaries: {children_summaries}\\n dependency_summaries: {dependency_summaries}\\n \"\n            #     f\"import_details: {import_details}\\n parent_summary: {parent_summary}\\n pass_number: {pass_number}\\n \"\n            #     f\"previous_summary: {previous_summary}\"\n            # )\n            return strategy(\n                code,\n                children_summaries,\n                dependency_summaries,\n                import_details,\n                parent_summary,\n                pass_number,\n                previous_summary,\n            )\n",
    "important_comments": [],
    "dependencies": [],
    "summary": "The `SummarizationPromptCreator` class is a specialized utility designed to generate dynamic prompts for a summarization system, particularly supporting multi-pass summarization processes. Its primary purpose is to facilitate the creation of prompts by interpolating various code-related details into predefined template strings, enabling the summarization of code snippets with varying levels of context and detail. This functionality is crucial for systems that require iterative summarization, allowing for refined outputs over multiple passes, which is significant in contexts where the accuracy and depth of summaries improve with each iteration.\n\nKey components of the code include the `create_prompt` method, a static method responsible for orchestrating the prompt creation process. It employs a strategy pattern to select an appropriate interpolation strategy based on the provided arguments, such as children summaries, dependency summaries, import details, and parent summaries. The `_interpolate_prompt_string` method is another critical component, performing the actual interpolation of values into the template and cleaning up unused placeholders to ensure a clean and professional output. The class utilizes a dictionary `_interpolation_strategies` that maps specific combinations of input parameters to lambda functions, which in turn call `_interpolate_prompt_string` with appropriate arguments. These strategies are categorized by pass numbers, allowing for iterative refinement of the summarization process, with specific strategies for each pass (e.g., pass 1, pass 2, pass 3).\n\nThe implementation leverages Python's built-in functionalities, focusing on string manipulation and lambda expressions for dynamic function execution. The `create_prompt` method constructs a `strategy_key` by concatenating strings that indicate the presence of children summaries, dependency summaries, and import details. This key is used to retrieve a corresponding strategy function from the `_interpolation_strategies` dictionary, which is invoked with the provided arguments to generate the prompt. The `_interpolate_prompt_string` method replaces placeholders in the prompt template with actual values and removes any unused placeholders, ensuring a clean and relevant prompt output. It also handles multi-pass summarization by incorporating previous summaries into the prompt generation process, which is essential for maintaining context and continuity across summarization passes.\n\nThe technical stack includes Python's `re` module for regular expression operations, which is used to clean up the final output by removing extraneous blank lines. The `rich` library is used for enhanced console output, providing better visualization and debugging capabilities. The code also imports a module `fenec.ai_services.summarizer.prompts.summarization_prompts` as `prompts`, which presumably contains the prompt templates and example data used in the interpolation process. This approach leverages Python's efficient handling of strings and regular expressions to perform the necessary text processing tasks.\n\nIn the context of a larger system, this code serves as a utility for generating context-aware prompts for a summarization engine. It interacts with other components by accepting summaries and details from various parts of the system, processing them to create prompts that guide the summarization process. This modular design allows for flexible integration into systems that require iterative and context-sensitive summarization capabilities. The class's ability to handle multiple passes and incorporate previous summaries makes it a vital component in a larger summarization framework, where it can be used to iteratively refine and enhance the quality of generated summaries, ensuring they are comprehensive and contextually relevant.",
    "children_ids": [
        "fenec:ai_services:summarizer:prompts:prompt_creator.py__*__MODULE__*__CLASS-SummarizationPromptCreator"
    ]
}